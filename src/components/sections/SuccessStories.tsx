import type { FC } from 'react';
import { motion } from 'framer-motion';
import { Check, TrendingUp, Briefcase, Star, Rocket, User, Microscope, Monitor } from 'lucide-react';
import { useIntersectionObserver } from '../../hooks/useIntersectionObserver';

const SuccessStories: FC = () => {
  const [ref, isIntersecting] = useIntersectionObserver();

  const stats = [
    {
      icon: <TrendingUp className="w-8 h-8" style={{ color: 'rgb(239 68 68)' }} />,
      number: "500+",
      label: "–°—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ –∫—É—Ä—Å"
    },
    {
      icon: <Briefcase className="w-8 h-8" style={{ color: 'rgb(217 119 6)' }} />,
      number: "89%",
      label: "–ù–∞—à–ª–∏ —Ä–∞–±–æ—Ç—É –∏–ª–∏ –∑–∞–∫–∞–∑—ã"
    },
    {
      icon: <Star className="w-8 h-8" style={{ color: 'rgb(234 179 8)' }} />,
      number: "4.9/5",
      label: "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –∫—É—Ä—Å–∞"
    },
    {
      icon: <Rocket className="w-8 h-8" style={{ color: 'rgb(239 68 68)' }} />,
      number: "200+",
      label: "–°–æ–∑–¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤"
    }
  ];

  const testimonials = [
    {
      icon: <User className="w-8 h-8" style={{ color: 'rgb(234 179 8)' }} />,
      name: "–ê–ª–µ–∫—Å–µ–π –ö.",
      role: "Junior Python Developer",
      quote: "–ü—Ä–æ—à–µ–ª –∫—É—Ä—Å –∑–∞ 2 –º–µ—Å—è—Ü–∞. –¢–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞—é –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è!",
      achievement: "–£—Å—Ç—Ä–æ–∏–ª—Å—è Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º"
    },
    {
      icon: <User className="w-8 h-8" style={{ color: 'rgb(234 179 8)' }} />,
      name: "–ú–∞—Ä–∏—è –°.",
      role: "–°—Ç—É–¥–µ–Ω—Ç–∫–∞ –í–£–ó–∞",
      quote: "–ö—É—Ä—Å –ø–æ–º–æ–≥ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å API –∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –õ—É—á—à–µ –ª—é–±–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–≥–æ –∫—É—Ä—Å–∞ ‚Äî –≤—Å–µ –ø–æ –¥–µ–ª—É, –±–µ–∑ –≤–æ–¥—ã.",
      achievement: "–°–æ–∑–¥–∞–ª–∞ 3 —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –±–æ—Ç–∞"
    },
    {
      icon: <Briefcase className="w-8 h-8" style={{ color: 'rgb(217 119 6)' }} />,
      name: "–î–º–∏—Ç—Ä–∏–π –†.",
      role: "–§—Ä–∏–ª–∞–Ω—Å–µ—Ä",
      quote: "–í–∑—è–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ Telegram-–±–æ—Ç–æ–≤ –ø–æ—Å–ª–µ –∫—É—Ä—Å–∞. –ö–ª–∏–µ–Ω—Ç—ã –¥–æ–≤–æ–ª—å–Ω—ã –∫–∞—á–µ—Å—Ç–≤–æ–º –∏ —Å–∫–æ—Ä–æ—Å—Ç—å—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –û–∫—É–ø–∏–ª—Å—è –∑–∞ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü!",
      achievement: "–£–≤–µ–ª–∏—á–∏–ª –¥–æ—Ö–æ–¥ –Ω–∞ 40%"
    },
    {
      icon: <Microscope className="w-8 h-8" style={{ color: 'rgb(59 130 246)' }} />,
      name: "–ï–ª–µ–Ω–∞ –¢.",
      role: "QA Engineer",
      quote: "–†–µ—à–∏–ª–∞ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É. –ö—É—Ä—Å –¥–∞–ª —á–µ—Ç–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–æ–≤. –°–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞—é Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –≤ —Å—Ç–∞—Ä—Ç–∞–ø–µ.",
      achievement: "–°–º–µ–Ω–∏–ª–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é"
    },
    {
      icon: <Monitor className="w-8 h-8" style={{ color: 'rgb(107 114 128)' }} />,
      name: "–ò–≥–æ—Ä—å –í.",
      role: "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
      quote: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–ª —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–æ–≤. –ù–∞—á–∞–ª—å—Å—Ç–≤–æ –¥–æ–≤–æ–ª—å–Ω–æ, –ø–æ–ª—É—á–∏–ª –ø–æ–≤—ã—à–µ–Ω–∏–µ. –ü–ª–∞–Ω–∏—Ä—É—é —Å–æ–∑–¥–∞—Ç—å –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.",
      achievement: "–ü–æ–ª—É—á–∏–ª –ø–æ–≤—ã—à–µ–Ω–∏–µ"
    },
    {
      icon: <User className="w-8 h-8" style={{ color: 'rgb(234 179 8)' }} />,
      name: "–ê–Ω–Ω–∞ –ú.",
      role: "–ù–∞—á–∏–Ω–∞—é—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      quote: "–ü–µ—Ä–≤—ã–π —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –≤ –º–æ–µ–π –∫–∞—Ä—å–µ—Ä–µ. –í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –æ—á–µ–Ω—å –ø–æ–Ω—è—Ç–Ω—ã–µ, –∫–∞–∂–¥—ã–π —à–∞–≥ –æ–±—ä—è—Å–Ω–µ–Ω. –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ –∫–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.",
      achievement: "–ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"
    }
  ];

  return (
    <section ref={ref} className="py-20 bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isIntersecting ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-bold text-primary-dark mb-6">
            –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –Ω–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –†–µ–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—à–ª–∏ –∫—É—Ä—Å –∏ –ø—Ä–∏–º–µ–Ω–∏–ª–∏ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ
          </p>
        </motion.div>

        {/* Statistics */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-20">
          {stats.map((stat, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              animate={isIntersecting ? { opacity: 1, y: 0 } : {}}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              className="bg-white rounded-xl p-6 text-center shadow-sm"
            >
              <div className="flex justify-center mb-4">
                {stat.icon}
              </div>
              <div className="text-3xl font-bold text-primary-pink mb-2">
                {stat.number}
              </div>
              <div className="text-gray-600 text-sm">
                {stat.label}
              </div>
            </motion.div>
          ))}
        </div>

        {/* Testimonials */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16">
          {testimonials.map((testimonial, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              animate={isIntersecting ? { opacity: 1, y: 0 } : {}}
              transition={{ duration: 0.6, delay: 0.4 + index * 0.1 }}
              className="bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow"
            >
              <div className="flex items-center gap-3 mb-4">
                <div className="flex-shrink-0">
                  {testimonial.icon}
                </div>
                <div>
                  <h4 className="font-semibold text-primary-dark">
                    {testimonial.name}
                  </h4>
                  <p className="text-sm text-gray-600">
                    {testimonial.role}
                  </p>
                </div>
              </div>
              <blockquote className="text-gray-700 text-sm mb-4 leading-relaxed">
                "{testimonial.quote}"
              </blockquote>
              <div className="inline-flex items-center gap-2 bg-primary-pink/10 text-primary-pink px-3 py-1 rounded-full text-xs font-medium">
                <Check className="w-3 h-3" />
                {testimonial.achievement}
              </div>
            </motion.div>
          ))}
        </div>

        {/* Call to Action */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isIntersecting ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6, delay: 1.2 }}
          className="text-center bg-white rounded-2xl p-8 shadow-sm"
        >
          <div className="text-6xl mb-4">üèÜ</div>
          <h3 className="text-2xl font-bold text-primary-dark mb-4">
            –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –ø—Ä–∞–∫—Ç–∏–∫–æ–π
          </h3>
          <p className="text-lg text-gray-600">
            –ë–æ–ª–µ–µ 500 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —É–∂–µ —Å–æ–∑–¥–∞–ª–∏ —Å–≤–æ–∏—Ö –±–æ—Ç–æ–≤ –∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç –Ω–∞–≤—ã–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É —É—Å–ø–µ—à–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!
          </p>
        </motion.div>
      </div>
    </section>
  );
};

export default SuccessStories; 